{{- if .Values.persistence.efs.create_storageClass }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.persistence.efs.storageClassName }}
provisioner: efs.csi.aws.com
parameters:
  directoryPerms: "777"
  gidRangeStart: "1000"
{{- end }}
---
{{- if .Values.persistence.efs.enabled }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.persistence.efs.pvname }}
spec:
  capacity:
    storage: {{ .Values.persistence.efs.size }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.persistence.efs.storageClassName }}
  csi:
    driver: efs.csi.aws.com
    volumeHandle: {{ .Values.efsFileSystemId }}::{{ .Values.efsAccessPointId }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.persistence.efs.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.persistence.efs.size }}
---
{{- if .Values.persistence.ebs.create_storageClass }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ .Values.persistence.ebs.storageClassName }}
provisioner: ebs.csi.aws.com
reclaimPolicy: {{ .Values.persistence.efs.reclaimPolicy }}
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: gp3
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-claim
  labels:
    {{- include "datamasque.productLabel" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.persistence.ebs.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.persistence.ebs.size }}
