#kind: StorageClass
#apiVersion: storage.k8s.io/v1
#metadata:
#  name: efs-sc
#provisioner: efs.csi.aws.com
#parameters:
#  directoryPerms: "777"
#  gidRangeStart: "1000"

---
{{- if .Values.persistence.efs.enabled }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.persistence.efs.pvname }}
spec:
  capacity:
    storage: {{ .Values.persistence.efs.size }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: {{ .Values.efsFileSystemId }}::{{ .Values.efsAccessPointId }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-claim
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: {{ .Values.persistence.efs.size }}
---
#apiVersion: storage.k8s.io/v1
#kind: StorageClass
#metadata:
#  name: ebs-sc
#provisioner: ebs.csi.aws.com
#reclaimPolicy: Retain
#volumeBindingMode: WaitForFirstConsumer
#parameters:
#  type: gp3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-claim
  labels:
    {{- include "datamasque.productLabel" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: {{ .Values.persistence.ebs.size }}
